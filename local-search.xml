<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android基础知识</title>
    <link href="/2023/08/07/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2023/08/07/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="Android-ANR分析"><a href="#Android-ANR分析" class="headerlink" title="Android ANR分析"></a>Android ANR分析</h1><span id="more"></span><h2 id="ANR-描述"><a href="#ANR-描述" class="headerlink" title="ANR 描述"></a>ANR 描述</h2><p>ANR全称：Application Not Responding，是指程序未有响应。出现这个异常情况是由于Android系统处理某些事件需要在一定时间内完成，否则超过预定时间内没有得到响应，则会出现ANR。</p><h2 id="造成ANR场景"><a href="#造成ANR场景" class="headerlink" title="造成ANR场景"></a>造成ANR场景</h2><ul><li>Service Timeout：service在特定时间内无法处理完成。</li><li>Broadcastqueue Timeout：BroadcastRecevier在特定时间内无法处理完成。</li><li>ContentProvider Timeout：内容提供者执行超时。</li><li>InputDispatching Timeout：按键或者触摸事件在特定时间内无响应。</li></ul><h2 id="ANR监测"><a href="#ANR监测" class="headerlink" title="ANR监测"></a>ANR监测</h2><h3 id="Service超时监测机制"><a href="#Service超时监测机制" class="headerlink" title="Service超时监测机制"></a>Service超时监测机制</h3><p>Service运行在应用程序的主线程，如果Service的执行时间超过20秒，则会引发ANR。</p><p>当发生Service ANR时，一般可以先排查一下在Service的生命周期函数中(onCreate(), onStartCommand()等)有没有做耗时的操作，譬如复杂的运算、IO操作等。 如果应用程序的代码逻辑查不出问题，就需要深入检查当前系统的状态：CPU的使用情况、系统服务的状态等，判断当时发生ANR进程是否受到系统运行异常的影响。</p><h3 id="输入事件超时监测"><a href="#输入事件超时监测" class="headerlink" title="输入事件超时监测"></a>输入事件超时监测</h3><p>应用程序可以接收输入事件(按键、触屏、轨迹球等)，当5秒内没有处理完毕时，则会引发ANR。</p><h3 id="BroadcastRevicer广播超时监测"><a href="#BroadcastRevicer广播超时监测" class="headerlink" title="BroadcastRevicer广播超时监测"></a>BroadcastRevicer广播超时监测</h3><p>BroadcastReceiver未在10秒内完成相关的处理</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>将所有耗时操作，比如访问网络，Socket通信，查询大 量SQL 语句，复杂逻辑计算等都放在子线程中去，然 后通过handler.sendMessage、runonUIThread、AsyncTask、RxJava等方式更新UI。无论如何都要确保用户界面的流畅 度。如果耗时操作需要让用户等待，那么可以在界面上显示度条。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
